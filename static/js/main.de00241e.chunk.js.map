{"version":3,"sources":["components/Profile/profile.module.css","components/Statistics/static.module.css","components/FriendList/friends.module.css","components/Transaction-history/trans.module.css","components/variables.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/Transaction-history/Transaction.js","components/App.js","index.js"],"names":["module","exports","Profile","user","className","style","profile","src","avatar","alt","name","tag","location","stats","quantity","followers","views","likes","getRandomColor","color","i","Math","floor","random","backgroundColor","Statistics","title","statistics","statList","map","id","percentage","label","key","item","defaultProps","FriendList","friendList","friendsList","isOnline","status","online","offline","Transaction","data","choiceCountOrUncount","transactionHistory","type","amount","currency","count","uncount","propType","PropType","arrayOf","object","string","App","variableCSS","container","statisticalData","friendListToRender","transactionData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de00241e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__LD0Qd\",\"stats\":\"profile_stats__gWu4N\",\"avatar\":\"profile_avatar__2UkSd\",\"quantity\":\"profile_quantity__3sb24\",\"tag\":\"profile_tag__icfef\",\"location\":\"profile_location__oewF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"static_statistics__2-tfK\",\"statList\":\"static_statList__afuWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"friends_friendsList__10TjL\",\"defaultMargin\":\"friends_defaultMargin__JYLX-\",\"avatar\":\"friends_avatar__qOH49 friends_defaultMargin__JYLX-\",\"status\":\"friends_status__r9BUV friends_defaultMargin__JYLX-\",\"online\":\"friends_online__1ySWF\",\"offline\":\"friends_offline__2p31M\",\"name\":\"friends_name__3de7V friends_defaultMargin__JYLX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"trans_transactionHistory__u0O-S\",\"count\":\"trans_count__1TDxJ\",\"uncount\":\"trans_uncount__3mDZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"variables_container__1uRnY\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './profile.module.css';\n\nfunction Profile({ user }) {\n  return (\n    <div className={style.profile}>\n      <div>\n        <img src={user.avatar} alt=\"user avatar\" className={style.avatar} />\n        <h2>{user.name}</h2>\n        <p className={style.tag}>@{user.tag}</p>\n        <p className={style.location}>{user.location}</p>\n      </div>\n\n      <ul className={style.stats}>\n        <li>\n          <span>Followers:</span>\n          <span className={style.quantity}>{user.stats.followers}</span>\n        </li>\n        <li>\n          <span>Views:</span>\n          <span className={style.quantity}>{user.stats.views}</span>\n        </li>\n        <li>\n          <span>Likes:</span>\n          <span className={style.quantity}>{user.stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    avatar: PropTypes.string,\n    tag: PropTypes.string,\n    name: PropTypes.string,\n    location: PropTypes.string,\n    stats: PropTypes.object,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport style from './static.module.css';\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i += 1) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return { backgroundColor: color };\n}\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={style.statistics}>\n      {title && <h2 className={style.title}>{title}</h2>}\n      <ul className={style.statList}>\n        {stats.map(({ id, percentage, label }) => (\n          <li key={id} style={getRandomColor()} className={style.item}>\n            <span className={style.label}>{label}</span>\n            <span className={style.percentage}>{percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: Proptypes.string,\n  stats: Proptypes.array,\n  id: Proptypes.string,\n  label: Proptypes.string,\n  percentage: Proptypes.string,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './friends.module.css';\n\nfunction FriendList({ friendList }) {\n  return (\n    <ul className={style.friendsList}>\n      {friendList.map(({ avatar, name, isOnline, id }) => {\n        return (\n          <li key={id}>\n            <span\n              className={`${style.status} ${\n                isOnline ? style.online : style.offline\n              }`}\n            />\n            <img className={style.avatar} src={avatar} alt=\"\" />\n            <p className={style.name}>{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friendList: PropTypes.array,\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n  id: PropTypes.number,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropType from 'prop-types';\nimport style from './trans.module.css';\n\nfunction Transaction({ data }) {\n  let choiceCountOrUncount = 0;\n  return (\n    <table className={style.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(({ id, type, amount, currency }) => {\n          choiceCountOrUncount += 1;\n          return (\n            <tr\n              key={id}\n              className={\n                choiceCountOrUncount % 2 === 0 ? style.count : style.uncount\n              }\n            >\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTransaction.propType = {\n  data: PropType.arrayOf(PropType.object),\n  id: PropType.string,\n  type: PropType.string,\n  amount: PropType.string,\n  currency: PropType.string,\n};\n\nexport default Transaction;\n","import React from 'react';\nimport user from './Profile/data.json';\nimport variableCSS from './variables.module.css';\nimport Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport statisticalData from './Statistics/data.json';\nimport FriendList from './FriendList/FriendList';\nimport friendListToRender from './FriendList/data.json';\nimport Transaction from './Transaction-history/Transaction';\nimport transactionData from './Transaction-history/data';\n\nfunction App() {\n  return (\n    <div className={variableCSS.container}>\n      <Profile user={user} />\n      <Statistics title=\"File Upload\" stats={statisticalData} />\n      <FriendList friendList={friendListToRender} />\n      <Transaction data={transactionData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}